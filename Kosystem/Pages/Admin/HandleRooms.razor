@page "/admin"
@attribute [Authorize]
@inject IRoomRepository RoomRepository

<h1>Hantera rum</h1>

<EditForm Model="createRoomModel" OnValidSubmit="HandleValidCreateRoomSubmit">
    <DataAnnotationsValidator />

    <input class="alert-state" id="room-created-alert" type="checkbox" @bind="hideCreatedRoomDialog" />
    <div class="alert alert-success background-success dismissible">
        <div>
            <h3>Rum <span class="badge success">#@createdRoom.Id.ToString("0000") @createdRoom.Name</span> har skapats!</h3>
            <p><a href="/@createdRoom.Id">Gå till rum #@createdRoom.Id.ToString("0000")</a></p>
        </div>
        <label class="btn-close" for="room-created-alert">X</label>
    </div>

    <div class="row">
        <div class="col sm-8">
            <div class="form-group">
                <label for="roomName">Rumsnamn</label>
                <InputText class="input-block border-3" type="text" id="roomName" @bind-Value="createRoomModel.Name" />
                <ValidationMessage For="() => createRoomModel.Name" />
            </div>
        </div>
        <div class="sm-4 col">
            <button class="border-5" type="submit" style="margin-top: 1.4rem">Skapa nytt rum</button>
        </div>
    </div>
</EditForm>

<h2>Existerande rum</h2>

@if (rooms.Count > 0)
{
    <table>
        <thead>
            <tr>
                <th style="width: 5.5rem">Rumsnummer</th>
                <th class="rooms-table-room-name">Rumsnamn</th>
                <th>Handling</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var room in rooms.OrderBy(o => o.Name).ThenBy(o => o.Id))
            {
                <tr>
                    <td>#@room.Id.ToString("0000")</td>
                    <td class="rooms-table-room-name">@room.Name</td>
                    <td class="row flex-middle">
                        <span>
                            <a href="/@room.Id" target="_blank">
                                <img class="no-border" src="/img/external-link.svg" style="width: 2rem; float: left;" title="Öppna rum i ny flik" alt="Öppna"/>
                            </a>
                        </span>
                        <button type="button" style="padding: 0; width: 2rem;" @onclick="@(_ => deleteRoom = room.Id)">
                            <img class="no-border" src="/img/delete.svg" style="width: 2rem; float: left;" title="Ta bort rum" alt="Ta bort"/>
                        </button>
                        @if (deleteRoom == room.Id)
                        {
                            <div class="danger">
                                Ta bort #@room.Id.ToString("0000")?
                                <button type="button" class="btn-danger btn-small" @onclick="@(_ => HandleDeleteRoom(room.Id))">Ja!</button>
                                <button type="button" class="btn-primary btn-small" @onclick="@(_ => deleteRoom = null)">Avbryt</button>
                            </div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>
        Finns inga rum. Skapa ett genom att fylla i textfältet ovan!
    </p>
}

@code {

    private CreateRoomViewModel createRoomModel = new CreateRoomViewModel();

    private bool hideCreatedRoomDialog = true;

    private RoomModel createdRoom;

    private IReadOnlyCollection<RoomModel> rooms = Array.Empty<RoomModel>();

    private int? deleteRoom;

    protected override void OnInitialized()
    {
        UpdateRoomsList();
    }

    private void UpdateRoomsList()
    {
        rooms = RoomRepository.FindRooms();
    }

    private void HandleDeleteRoom(int roomId)
    {
        deleteRoom = null;
        RoomRepository.DeleteRoom(roomId);
        UpdateRoomsList();
    }

    private void HandleValidCreateRoomSubmit()
    {
        if (createRoomModel.Name is null)
        {
            return;
        }

        createdRoom = RoomRepository.CreateRoom(new NewRoomModel(createRoomModel.Name));
        hideCreatedRoomDialog = false;
        UpdateRoomsList();
    }

}
