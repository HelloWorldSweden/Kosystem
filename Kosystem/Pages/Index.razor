@page "/"
@inject NavigationManager NavigationManager
@inject IPersonSession PersonSession
@inject IRoomRepository RoomRepository

<h1>Börja köa efter hjälp</h1>

<EditForm Model="model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <input class="alert-state" id="unknown-room-alert" type="checkbox" @bind="hideRoomAlert" />
    <div class="alert alert-danger dismissible">
        <span>@roomAlert</span>
        <label class="btn-close" for="unknown-room-alert">X</label>
    </div>

    <div class="row">
        <div class="col sm-4">
            <div class="form-group">
                <label for="roomNumber">Rumsnumret</label>
                <InputText class="input-block border-2" id="roomNumber" placeholder="#0000" @bind-Value="model.RoomId" />
                <ValidationMessage For="() => model.RoomId" />
            </div>
        </div>
        <div class="col sm-8">
            <div class="form-group">
                <label for="name">Ditt namn</label>
                <InputText class="input-block border-3" type="text" id="name" @bind-Value="model.Name" />
                <ValidationMessage For="() => model.Name" />
            </div>
        </div>
    </div>

    <div class="row flex-center">
        <div class="sm-4 col">
            <button class="btn-large border-4" type="submit">Gå med rum</button>
        </div>
    </div>
</EditForm>

@code {
    private readonly JoinRoomViewModel model = new JoinRoomViewModel();

    private string? roomAlert;
    private bool hideRoomAlert = true;

    void HandleValidSubmit()
    {
        if (string.IsNullOrWhiteSpace(model.RoomId) || model.Name is null)
        {
            return;
        }

        if (!RoomIdParser.TryParse(model.RoomId, out var roomId))
        {
            roomAlert = $"Värde '{model.RoomId?.Trim()}' är inte ett giltigt rumsnummer.";
            hideRoomAlert = false;
            return;
        }

        var room = RoomRepository.FindRoom(roomId);
        if (!room.HasValue)
        {
            roomAlert = $"Rum #{roomId:0000} finns inte.";
            hideRoomAlert = false;
            return;
        }

        var person = PersonSession.SetCurrentPerson(model.Name);
        var result = RoomRepository.AddPersonToRoom(room.Value.Id, person.Id);

        if (result is not AddResult.OK and not AddResult.AlreadyAdded)
        {
            roomAlert = $"Kunde inte lägga till dig i rum #{roomId:0000}. Okänt fel...";
            hideRoomAlert = false;
            return;
        }

        NavigationManager.NavigateTo($"/{model.RoomId}");
    }
}
