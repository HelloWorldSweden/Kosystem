@if (Room is null)
{
    <h1>#N/A Rummet finns inte</h1>
    <p>Rummet kanske har blivit borttaget, eller så har du länkats till fel rumsnummber.</p>
}
else
{
    <h1>@RoomIdParser.Format(Room.Id) @Room.Name</h1>

    @if (CurrentPerson is not null)
    {
        <div class="form-group">
            <label for="paperSwitch1" class="paper-switch-tile">
                <input id="paperSwitch1" name="paperSwitch1" type="checkbox" />
                <div class="paper-switch-tile-card border">
                    <div class="paper-switch-tile-card-front border background-success">Börja köa</div>
                    <div class="paper-switch-tile-card-back border background-danger">Sluta köa</div>
                </div>
            </label>
        </div>
    }
    else
    {
        <div class="form-group">
            <label class="paper-switch-tile">
                <div class="paper-switch-tile-card border">
                    <div class="border background-warning">
                        <a href="/?room=@RoomIdParser.FormatForUrl(Room.Id)">Skapa namn först</a>
                    </div>
                </div>
            </label>
        </div>
    }
}

@if (People?.Count > 0)
{
    foreach (var person in People.OrderBy(o => o.EnqueuedAt).ThenBy(o => o.Name))
    {
        <PersonComponent @key="person.Id" Person="person" IsCurrentPerson="person.Id == CurrentPerson?.Id"/>
    }
}
else
{
    <p>Finns inga personer i detta rum.</p>
}

@code {
    [Parameter]
    public RoomModel? Room { get; set; }

    [Parameter]
    public IReadOnlyCollection<PersonModel>? People { get; set; }

    [Parameter]
    public PersonModel? CurrentPerson { get; set; }
}
